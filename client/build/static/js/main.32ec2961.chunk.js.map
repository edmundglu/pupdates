{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","images/updates.jpg","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","gutterBottom","creator","CardContent","text","tags","tag","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","message","Container","maxwidth","AppBar","align","src","updates","alt","Grow","in","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32ec2961.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\n\n//use this because if you mispell something, it will show as a error\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport default combineReducers({\n  posts,\n});\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\n\n//reducer = state, action\n// state is an array of posts & we are in the posts in reducers\n//exporting to use in reducers/index.js\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    case UPDATE:\n      //output of a map is an array\n      //will change something in the array & return the updated array\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      //spread all the posts, add a new post - stored in the action.paylod\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n","import axios from 'axios';\n\nconst url = 'https://k9pupdates.herokuapp.com/posts';\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) =>\n  axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\n","export default __webpack_public_path__ + \"static/media/updates.f15be445.jpg\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from '@material-ui/core';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts';\n\nconst Post = ({ post, setCurrentId }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={post.selectedFile}\n        title={post.title}\n      />\n      <div className={classes.overlay}>\n        <Typography variant='h6'>{post.title}</Typography>\n        <Typography variant='body2'>\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button\n          style={{ color: 'white' }}\n          size='small'\n          onClick={() => {\n            setCurrentId(post._id);\n          }}\n        >\n          <MoreHorizIcon fontSize='default' />\n        </Button>\n      </div>\n\n      <Typography className={classes.title} variant='h6' gutterBottom>\n        {post.creator}\n      </Typography>\n      <CardContent>\n        <Typography variant='body2'>{post.text}</Typography>\n      </CardContent>\n      <div className={classes.details}>\n        <Typography variant='body2' color='textSecondary'>\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <CardActions className={classes.cardActions}>\n        <Button\n          size='small'\n          color='primary'\n          onClick={() => {\n            dispatch(likePost(post._id));\n          }}\n        >\n          <ThumbUpAltIcon fontSize='small' />\n          &nbsp; Like&nbsp;{post.likeCount}\n        </Button>\n        <Button\n          size='small'\n          color='primary'\n          onClick={() => {\n            dispatch(deletePost(post._id));\n          }}\n        >\n          <DeleteIcon fontSize='small' />\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api';\n\n//Action Creators\n//functions that return actions\n//thunk has you create another set of parentheses & arrow for the async function\nexport const getPosts = () => async (dispatch) => {\n  try {\n    // get the response from the api, where there is always the data object so we are destructuring it\n    // an action is an object that has a type:  & payload:\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n//as soon as the action gets dispatched, we have to handle the logic in the reducer\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    //destructure data from response\n    const { data } = await api.createPost(post);\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    //destructure the response\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n  //init as hook, inside useSelector, we have a call back function, & has access to global redux store\n  //posts in state.posts comes from the index.js of reducers\n  const posts = useSelector((state) => state.posts);\n  const classes = useStyles();\n\n  console.log(posts);\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems='stretch'\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={6}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Posts;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\n//Get current ID of post\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  );\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    text: '',\n    tags: '',\n    selectedFile: '',\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  // above: the [post] says that when post value changes, then run the function inside\n  // when user submits, send post request with data that the user sends\n  const handleSubmit = (e) => {\n    //prevent getting the refresh from the browser\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      //pass data from our state\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      text: '',\n      tags: '',\n      selectedFile: '',\n    });\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete='off'\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant='h6'>\n          {currentId ? 'Editing' : 'Creating'} a Pupdate\n        </Typography>\n        <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name='text'\n          variant='outlined'\n          label='Text'\n          fullWidth\n          value={postData.text}\n          onChange={(e) => setPostData({ ...postData, text: e.target.value })}\n        />\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(',') })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type='file'\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n          <Button\n            className={classes.buttonSubmit}\n            variant='contained'\n            color='primary'\n            size='large'\n            type='submit'\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            variant='contained'\n            color='secondary'\n            size='small'\n            onClick={clear}\n            fullWidth\n          >\n            Clear\n          </Button>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  [theme.breakpoints.down('sm')]: {\n    mainContainer: {\n      flexDirection: 'column-reverse',\n    },\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\n//to dispatch an action\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport updates from './images/updates.jpg';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport useStyles from './styles';\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  //Above: by putting currentId in useEffect, it will change the Id and cause dispatch to getPosts to refresh the page\n\n  return (\n    <Container maxwidth='lg'>\n      <AppBar className={classes.appBar} position='static' color='inherit'>\n        <Typography className={classes.heading} variant='h2' align='center'>\n          Pupdates\n        </Typography>\n        <img\n          className={classes.image}\n          src={updates}\n          alt='updates'\n          height='60'\n        />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            className={classes.mainContainer}\n            container\n            justifyContent='space-between'\n            alignItems='stretch'\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//access state from anywhere with Provider\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\n\nimport reducers from './reducers';\n\nimport App from './App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}